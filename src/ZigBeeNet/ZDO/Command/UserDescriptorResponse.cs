using System;
using System.Text;
using ZigBeeNet.Transaction;
using ZigBeeNet.ZCL;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZDO.Field;

namespace ZigBeeNet.ZDO.Command
{
    /// <summary>
    /// User Descriptor Response value object class.
    /// 
    /// The User_Desc_rsp is generated by a remote device in response to a
    /// User_Desc_req directed to the remote device. This command shall be unicast to
    /// the originator of the User_Desc_req command.
    /// 
    /// </summary>
    public class UserDescriptorResponse : ZdoResponse
    {
        /// <summary>
        /// NWKAddrOfInterest command message field.
        /// </summary>
        public ushort NwkAddrOfInterest { get; set; }

        /// <summary>
        /// Length command message field.
        /// </summary>
        public byte Length { get; set; }

        /// <summary>
        /// UserDescriptor command message field.
        /// </summary>
        public UserDescriptor UserDescriptor { get; set; }

        /// <summary>
        /// Default constructor.
        /// </summary>
        public UserDescriptorResponse()
        {
            ClusterId = 0x8011;
        }

        internal override void Serialize(ZclFieldSerializer serializer)
        {
            base.Serialize(serializer);

            serializer.Serialize(Status, ZclDataType.Get(DataType.ZDO_STATUS));
            serializer.Serialize(NwkAddrOfInterest, ZclDataType.Get(DataType.NWK_ADDRESS));
            serializer.Serialize(Length, ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
            serializer.Serialize(UserDescriptor, ZclDataType.Get(DataType.USER_DESCRIPTOR));
        }

        internal override void Deserialize(ZclFieldDeserializer deserializer)
        {
            base.Deserialize(deserializer);

            Status = (ZdoStatus)deserializer.Deserialize(ZclDataType.Get(DataType.ZDO_STATUS));
            if (Status != ZdoStatus.SUCCESS)
            {
                // Don't read the full response if we have an error
                return;
            }
            NwkAddrOfInterest = (ushort)deserializer.Deserialize(ZclDataType.Get(DataType.NWK_ADDRESS));
            Length = (byte)deserializer.Deserialize(ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
            UserDescriptor = (UserDescriptor)deserializer.Deserialize(ZclDataType.Get(DataType.USER_DESCRIPTOR));
        }

        public override string ToString()
        {
            StringBuilder builder = new StringBuilder();

            builder.Append("UserDescriptorResponse [")
                   .Append(base.ToString())
                   .Append(", status=")
                   .Append(Status)
                   .Append(", nwkAddrOfInterest=")
                   .Append(NwkAddrOfInterest)
                   .Append(", length=")
                   .Append(Length)
                   .Append(", userDescriptor=")
                   .Append(UserDescriptor)
                   .Append(']');

            return builder.ToString();
        }
    }
}
