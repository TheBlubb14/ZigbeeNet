//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZigBeeNet.Hardware.Digi.XBee.Internal.Protocol
{
    using Serilog;
    using System;
    using System.Collections.Concurrent;
    using System.Collections.Generic;
    
    
    /// <summary>
    /// Helper factory class to create <see cref="XBeeResponseFactory"/> classes.
    /// </summary>
    public class XBeeResponseFactory
    {
        
        private static IDictionary<int?, Type> _events = new ConcurrentDictionary<int?, Type>();
        
        private static IDictionary<int?, Type> _atCommands = new ConcurrentDictionary<int?, Type>();
        
        static XBeeResponseFactory()
        {
            _events.Add(0x88, typeof(XBeeAtResponse));
            _events.Add(0x8B, typeof(XBeeTransmitStatusResponse));
            _atCommands.Add(0x414F, typeof(XBeeApiModeResponse));
            _atCommands.Add(0x4150, typeof(XBeeApiEnableResponse));
            _atCommands.Add(0x4153, typeof(XBeeActiveScanResponse));
            _atCommands.Add(0x4345, typeof(XBeeCoordinatorEnableResponse));
            _atCommands.Add(0x4348, typeof(XBeeOperatingChannelResponse));
            _atCommands.Add(0x4544, typeof(XBeeEnergyScanResponse));
            _atCommands.Add(0x4545, typeof(XBeeEncryptionEnableResponse));
            _atCommands.Add(0x454F, typeof(XBeeEncryptionOptionsResponse));
            _atCommands.Add(0x4652, typeof(XBeeSoftwareResetResponse));
            _atCommands.Add(0x4856, typeof(XBeeHardwareVersionResponse));
            _atCommands.Add(0x4944, typeof(XBeeExtendedPanIdConfigResponse));
            _atCommands.Add(0x4A4E, typeof(XBeeJoinNotificationResponse));
            _atCommands.Add(0x4B59, typeof(XBeeLinkKeyResponse));
            _atCommands.Add(0x4E44, typeof(XBeeNodeDiscoveryResponse));
            _atCommands.Add(0x4E4B, typeof(XBeeNetworkKeyResponse));
            _atCommands.Add(0x4E52, typeof(XBeeNetworkResetResponse));
            _atCommands.Add(0x4F49, typeof(XBeePanIdResponse));
            _atCommands.Add(0x4F50, typeof(XBeeExtendedPanIdResponse));
            _atCommands.Add(0x5245, typeof(XBeeResetResponse));
            _atCommands.Add(0x5343, typeof(XBeeScanChannelsResponse));
            _atCommands.Add(0x5348, typeof(XBeeIeeeAddressHighResponse));
            _atCommands.Add(0x534C, typeof(XBeeIeeeAddressLowResponse));
            _atCommands.Add(0x564C, typeof(XBeeDetailedVersionResponse));
            _atCommands.Add(0x5652, typeof(XBeeFirmwareVersionResponse));
            _atCommands.Add(0x5752, typeof(XBeeSaveDataResponse));
            _atCommands.Add(0x5A53, typeof(XBeeZigbeeStackProfileResponse));
        }
        
        public static IXBeeResponse GetXBeeFrame(int[] data)
        {
            Type xbeeClass = null;
            if (data[2] == 0x88)
            {
                xbeeClass = _atCommands[(data[4] << 8) + data[5]];
            }
            if (xbeeClass == null)
            {
                _events.TryGetValue(data[2], out xbeeClass);
            }
            if (xbeeClass == null)
            {
                return null;
            }
            try
            {
                IXBeeResponse xbeeFrame = Activator.CreateInstance(xbeeClass) as IXBeeResponse;
                xbeeFrame.Deserialize(data);
                return xbeeFrame;
            }
            catch (Exception ex)
            {
                Log.Debug("Error creating instance of IXBeeResponse", ex);
            }
            return null;
        }
    }
}
