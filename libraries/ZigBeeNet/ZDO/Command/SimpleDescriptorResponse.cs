using System;
using System.Collections.Generic;
using System.Text;
using ZigBeeNet.ZCL;
using ZigBeeNet.ZCL.Protocol;
using ZigBeeNet.ZDO.Field;

namespace ZigBeeNet.ZDO.Command
{
    /// <summary>
     /// Simple Descriptor Response value object class.
     /// 
     /// The Simple_Desc_rsp is generated by a remote device in response to a
     /// Simple_Desc_req directed to the remote device. This command shall be unicast to
     /// the originator of the Simple_Desc_req command.
     /// </summary>
    public class SimpleDescriptorResponse : ZdoResponse
    {
        /// <summary>
         /// NWKAddrOfInterest command message field.
         /// </summary>
        public ushort NwkAddrOfInterest { get; set; }

        /// <summary>
         /// Length command message fie
         /// </summary>
        public byte Length { get; set; }

        /// <summary>
         /// SimpleDescriptor command message field.
         /// </summary>
        public SimpleDescriptor SimpleDescriptor { get; set; }

        /// <summary>
         /// Default constructor.
         /// </summary>
        public SimpleDescriptorResponse()
        {
            ClusterId = 0x8004;
        }

        internal override void Serialize(ZclFieldSerializer serializer)
        {
            base.Serialize(serializer);

            serializer.Serialize(Status, ZclDataType.Get(DataType.ZDO_STATUS));
            serializer.Serialize(NwkAddrOfInterest, ZclDataType.Get(DataType.NWK_ADDRESS));
            serializer.Serialize(Length, ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
            serializer.Serialize(SimpleDescriptor, ZclDataType.Get(DataType.SIMPLE_DESCRIPTOR));
        }

        internal override void Deserialize(ZclFieldDeserializer deserializer)
        {
            base.Deserialize(deserializer);

            Status = (ZdoStatus)deserializer.Deserialize(ZclDataType.Get(DataType.ZDO_STATUS));

            if (Status != ZdoStatus.SUCCESS)
            {
                // Don't read the full response if we have an error
                return;
            }

            NwkAddrOfInterest = (ushort)deserializer.Deserialize(ZclDataType.Get(DataType.NWK_ADDRESS));
            Length = (byte)deserializer.Deserialize(ZclDataType.Get(DataType.UNSIGNED_8_BIT_INTEGER));
            SimpleDescriptor = (SimpleDescriptor)deserializer.Deserialize(ZclDataType.Get(DataType.SIMPLE_DESCRIPTOR));
        }

        public override string ToString()
        {
            StringBuilder builder = new StringBuilder();

            builder.Append("SimpleDescriptorResponse [")
                   .Append(base.ToString())
                   .Append(", status=")
                   .Append(Status)
                   .Append(", nwkAddrOfInterest=")
                   .Append(NwkAddrOfInterest)
                   .Append(", length=")
                   .Append(Length)
                   .Append(", simpleDescriptor=")
                   .Append(SimpleDescriptor)
                   .Append(']');

            return builder.ToString();
        }

    }
}
